version: '3.8'
services:
  backend:
    build:
      context: ./BE
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - '3000:3000'
    volumes:
      - ./BE:/app
    restart: always
    networks:
      - default
    depends_on:
      - postgres-db
      - redis
  frontend:
    build:
      context: ./FE
      dockerfile: Dockerfile
    container_name: frontend
    networks:
      - default
    entrypoint: sh -c './wait-for-it.sh backend:3000 -t 420 -- npm run build && npm run start'
    ports:
      - "8001:8001"
    env_file:
      - ./FE/.env
    volumes:
      - shared-data:/var/lib/postgresql/data
    links:
      - backend
  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    env_file:
      - ./BE/BE-config/.env
    ports:
      - '5432:5432'
    volumes:
      - shared-data:/var/lib/postgresql/data
      - ./BE/database:/docker-entrypoint-initdb.d/
    restart: always
    networks:
      - default

  redis:
    image: bitnami/redis:latest
    container_name: redis
    env_file:
      - ./BE/BE-config/.env
    restart: always
    ports:
      - '6379:6379'
    networks:
      - default
    command: /opt/bitnami/scripts/redis/run.sh --maxmemory 16mb

networks:
  default:
    driver: bridge

volumes:
  shared-data: